{"version":3,"sources":["components/app-header/app-header.component.jsx","modal/contact-data.js","modal/contact-labels.js","components/common-components/textarea/textarea.component.jsx","components/common-components/select/select.component.jsx","components/common-components/input/input.component.jsx","components/common-components/custom-button/custom-button.component.jsx","components/contact-form/contact-form.component.jsx","pages/contact-page/contact-page.component.jsx","components/tag-list/tag-list.component.jsx","components/contacts-view-table-menu/contacts-view-table-menu.component.jsx","components/common-components/table/table.component.jsx","components/common-components/delete/delete.component.jsx","components/contacts-view-table/contacts-view-table.component.jsx","components/contacts-view/contacts-view.components.jsx","components/common-components/custom-link/custom-link.compoent.jsx","pages/home-page/home-page.component.jsx","App.js","serviceWorker.js","index.js"],"names":["AppHeader","currentUser","className","to","icon","faAddressBook","style","color","height","width","Fragment","type","data","saveContact","contact","push","deleteContact","filter","c","_id","labelsData","getLabelsWithCount","incrementLabelCount","label","map","labelData","count","decrementLabelCount","TextArea","name","rows","onChange","htmlFor","id","Select","options","length","option","Input","placeholder","error","restProps","CustomButton","children","isDisabled","disabled","defaultProps","ContactForm","handleSubmit","handleChange","isFormValidated","errors","onSubmit","ContactPage","state","email","phone","company","website","address","notes","schema","Joi","string","required","allow","optional","trim","validate","abortEarly","details","item","path","message","validateProperty","value","obj","e","preventDefault","setState","contactWithId","shortId","generate","props","history","input","currentTarget","errorMessage","this","Component","TagList","totalLabels","faTags","tag","key","faTag","ContactsViewTableMenu","onSearch","role","faSearch","aria-label","aria-describedby","Table","columnData","rowData","column","columnIndex","scope","row","index","content","_","get","renderCell","Delete","onDelete","faTrash","cursor","onClick","ContactsViewTable","columnConfig","columnKeysConfig","Object","keys","lowerString","href","target","includes","rel","charAt","toUpperCase","substring","faUser","ContactsView","contacts","searchQuery","componentDidMount","componentDidUpdate","isEqual","handleSearch","query","getFilteredContacts","toLowerCase","filteredContacts","CustomLink","marginBottom","HomePage","tagList","handleDelete","App","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f22ae63.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAddressBook } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './app-header.styles.css';\r\n\r\nconst AppHeader = ({ currentUser }) => {\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-primary app-header\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        <FontAwesomeIcon icon={faAddressBook} style={{ color: 'white', height: 32, width: 32 }} />\r\n      </Link>\r\n      <div className=\"app-user-options\">\r\n        {currentUser ? (\r\n          <React.Fragment>\r\n            <span>Welcome, {currentUser}</span>\r\n            <button type=\"button\" className=\"btn btn-grey\">\r\n              Sign Out\r\n            </button>\r\n          </React.Fragment>\r\n        ) : (\r\n          <button type=\"button\" className=\"btn btn-light\">\r\n            Sign In\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import defaultData from './default-contacts.json';\r\n\r\nlet data = defaultData;\r\n\r\nexport const getContacts = () => {\r\n  return data;\r\n};\r\n\r\nexport const saveContact = contact => {\r\n  data.push(contact);\r\n};\r\n\r\nexport const deleteContact = contact => {\r\n  data = data.filter(c => c._id !== contact._id);\r\n};\r\n","import defaultLabel from './default-labels.json';\r\n\r\nlet labelsData = defaultLabel;\r\n\r\nexport const getLabelsWithCount = () => labelsData;\r\nexport const getLabels = () => labelsData.map(labelData => labelData.label);\r\nexport const incrementLabelCount = label =>\r\n  labelsData.map(labelData => (labelData.label === label ? labelData.count++ : labelData));\r\nexport const decrementLabelCount = label =>\r\n  labelsData.map(labelData => {\r\n    if (labelData.label === label) return labelData.count > 0 ? labelData.count-- : labelData;\r\n    return labelData;\r\n  });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextArea = ({ label, name, rows, onChange }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={name}>{label}</label>\r\n      <textarea className=\"form-control\" id={name} name={name} rows={rows || 0} onChange={onChange}></textarea>\r\n    </>\r\n  );\r\n};\r\n\r\nTextArea.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  row: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextArea;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Select = ({ name, label, options, onChange }) => {\r\n  if (!(name && label && options && options.length)) return null;\r\n  return (\r\n    <>\r\n      <label htmlFor={name}>{label}</label>\r\n      <select className=\"form-control\" name={name} id={name} onChange={onChange}>\r\n        {options.map(option => (\r\n          <option>{option}</option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nSelect.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './input.styles.css';\r\n\r\nconst Input = ({ label, name, type, placeholder, onChange, error, ...restProps }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={`form-control ${error ? 'has-error' : ''}`}\r\n        name={name}\r\n        id={name}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        {...restProps}\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.object\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst CustomButton = ({ children, type, color, isDisabled }) => {\r\n  return (\r\n    <button className={`btn btn-${color}`} type={type} disabled={isDisabled}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  isDisabled: PropTypes.bool.isRequired\r\n};\r\n\r\nCustomButton.defaultProps = {\r\n  color: 'primary'\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport TextArea from '../../components/common-components/textarea/textarea.component';\r\nimport Select from './../../components/common-components/select/select.component';\r\nimport Input from './../../components/common-components/input/input.component';\r\nimport { getLabels } from '../../modal/contact-labels';\r\nimport CustomButton from './../common-components/custom-button/custom-button.component';\r\n\r\nconst ContactForm = ({ handleSubmit, handleChange, isFormValidated, errors }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <Input\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          error={errors['name']}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Input\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          type=\"tel\"\r\n          placeholder=\"Phone Number\"\r\n          error={errors['phone']}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Input\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"example@domain.com\"\r\n          error={errors['email']}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Input\r\n          label=\"Website\"\r\n          name=\"website\"\r\n          type=\"url\"\r\n          placeholder=\"http://username.com\"\r\n          error={errors['website']}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Input\r\n          label=\"Company\"\r\n          name=\"company\"\r\n          type=\"text\"\r\n          placeholder=\"Company Name\"\r\n          error={errors['company']}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <TextArea label=\"Address\" name=\"address\" rows={2} error={errors['address']} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <TextArea label=\"Notes\" name=\"notes\" rows={3} error={errors['notes']} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Select name=\"label\" label=\"Label\" options={['', ...getLabels()]} onChange={handleChange} />\r\n      </div>\r\n      <CustomButton type=\"submit\" isDisabled={isFormValidated}>\r\n        Sign In\r\n      </CustomButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport shortId from 'shortid';\r\n\r\nimport { saveContact } from '../../modal/contact-data';\r\nimport { incrementLabelCount } from './../../modal/contact-labels';\r\n\r\nimport ContactForm from '../../components/contact-form/contact-form.component';\r\n\r\nclass ContactPage extends Component {\r\n  state = {\r\n    contact: { name: '', email: '', phone: '', company: '', website: '', address: '', notes: '', label: '' },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string().required(),\r\n    email: Joi.string()\r\n      .email()\r\n      .allow('')\r\n      .optional(),\r\n    phone: Joi.string()\r\n      .trim()\r\n      .required(),\r\n    company: Joi.string()\r\n      .allow('')\r\n      .optional(),\r\n    website: Joi.string()\r\n      .allow('')\r\n      .optional(),\r\n    address: Joi.string()\r\n      .allow('')\r\n      .optional(),\r\n    notes: Joi.string()\r\n      .allow('')\r\n      .optional(),\r\n    label: Joi.string()\r\n      .allow('')\r\n      .optional()\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.contact, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    const contactWithId = { ...this.state.contact };\r\n    contactWithId._id = shortId.generate();\r\n\r\n    saveContact(contactWithId);\r\n    incrementLabelCount(contactWithId.label);\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const contact = { ...this.state.contact };\r\n    contact[input.name] = input.value;\r\n\r\n    this.setState({ contact, errors });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container contact-page mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\" />\r\n          <div className=\"col-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h1 className=\"card-title\">Create Contact</h1>\r\n                <ContactForm\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleChange={this.handleChange}\r\n                  isFormValidated={!!this.validate()}\r\n                  errors={errors}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTags, faTag } from '@fortawesome/free-solid-svg-icons';\r\nimport './tag-list.styles.css';\r\n\r\nconst TagList = ({ data: labelsData }) => {\r\n  if (!labelsData) return null;\r\n  const totalLabels = labelsData.length;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"tag-list-header\">\r\n        <span className=\"tag-list-header-group\">\r\n          <FontAwesomeIcon icon={faTags} />\r\n        </span>\r\n        <span className=\"tag-list-header-group\">Labels</span>\r\n        <span className=\"tag-list-header-group badge badge-primary\">{totalLabels}</span>\r\n      </div>\r\n      <div className=\"tag-list-group\">\r\n        <ul className=\"list-group\">\r\n          {labelsData.map(tag => (\r\n            <li key={tag.label} className=\"list-group-item d-flex justify-content-between align-items-start border-0 \">\r\n              <FontAwesomeIcon icon={faTag} style={{ height: 16, width: 16 }} /> {tag.label}\r\n              <span className=\"badge badge-primary badge-pill\">{tag.count}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ContactsViewTableMenu = ({ value, onSearch }) => {\r\n  return (\r\n    <div className=\"alert alert-light\" role=\"alert\">\r\n      <div className=\"input-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"search-icon\">\r\n            <FontAwesomeIcon icon={faSearch} style={{ color: 'grey' }} />\r\n          </span>\r\n        </div>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          aria-describedby=\"search-icon\"\r\n          value={value}\r\n          onChange={e => onSearch(e.currentTarget.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsViewTableMenu;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport './table.styles.css';\r\n\r\nconst Table = ({ columnData, rowData }) => {\r\n  const renderCell = (row, column) => {\r\n    if (column.content) return column.content(row);\r\n\r\n    return _.get(row, column.key);\r\n  };\r\n\r\n  const createKey = (id, index) => id + '' + index;\r\n\r\n  if (!columnData && rowData) return null;\r\n\r\n  return (\r\n    <table className=\"table table-borderless table-hover\">\r\n      <thead>\r\n        <tr>\r\n          {columnData.map((column, columnIndex) => (\r\n            <th scope=\"col\" key={columnIndex}>\r\n              {column.label}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {rowData\r\n          ? rowData.map(row => (\r\n              <tr key={row._id}>\r\n                {columnData.map((column, columnIndex) => (\r\n                  <td key={createKey(row._id, columnIndex)}>{renderCell(row, column)}</td>\r\n                ))}\r\n              </tr>\r\n            ))\r\n          : null}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Delete = ({ onDelete }) => {\r\n  return <FontAwesomeIcon icon={faTrash} style={{ cursor: 'pointer' }} onClick={onDelete} />;\r\n};\r\n\r\nexport default Delete;\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport Table from '../common-components/table/table.component';\r\nimport Delete from '../common-components/delete/delete.component';\r\n\r\nconst ContactsViewTable = ({ data, onDelete }) => {\r\n  if (!(data && data.length)) return null;\r\n\r\n  const capitalizeFirstLetter = lowerString => `${lowerString.charAt(0).toUpperCase()}${lowerString.substring(1)}`;\r\n  const columnKeys = Object.keys(data[0]).filter(key => key !== '_id');\r\n\r\n  const columnConfig = [];\r\n  const columnKeysConfig = columnKeys.map(key => {\r\n    let content = null;\r\n    if (key === 'email')\r\n      content = contact => (\r\n        <a href={`mailto:${contact.email}?Subject=Hello`} target=\"_top\">\r\n          {contact.email}\r\n        </a>\r\n      );\r\n    if (key === 'website')\r\n      content = contact => (\r\n        <a\r\n          href={contact.website.includes('https://') ? contact.website : 'https://' + contact.website}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          {contact.website}\r\n        </a>\r\n      );\r\n\r\n    return {\r\n      key,\r\n      label: capitalizeFirstLetter(key),\r\n      content\r\n    };\r\n  });\r\n\r\n  columnConfig.push({\r\n    content: () => <FontAwesomeIcon icon={faUser} />\r\n  });\r\n  columnConfig.push(...columnKeysConfig);\r\n  columnConfig.push({\r\n    content: contact => <Delete onDelete={() => onDelete(contact)} />\r\n  });\r\n\r\n  return <Table rowData={data} columnData={columnConfig} />;\r\n};\r\n\r\nexport default ContactsViewTable;\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport ContactsViewTableMenu from '../contacts-view-table-menu/contacts-view-table-menu.component';\r\nimport ContactsViewTable from './../contacts-view-table/contacts-view-table.component';\r\n\r\nclass ContactsView extends Component {\r\n  state = { contacts: null, searchQuery: '' };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ contacts: this.props.data });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    if (!_.isEqual(this.state.contacts, this.props.data)) this.setState({ contacts: this.props.data });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query });\r\n  };\r\n\r\n  getFilteredContacts = (contacts, searchQuery) => {\r\n    return contacts.filter(\r\n      contact =>\r\n        contact.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        contact.address.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        contact.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        contact.company.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        contact.notes.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        contact.website.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        contact.phone.includes(searchQuery.toLowerCase()) ||\r\n        contact.label.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { onDelete } = this.props;\r\n    const { contacts, searchQuery } = this.state;\r\n    let filteredContacts = contacts;\r\n\r\n    if (!contacts) return null;\r\n    if (searchQuery) filteredContacts = this.getFilteredContacts(contacts, searchQuery);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section className=\"section-banner\">\r\n          <ContactsViewTableMenu value={searchQuery} onSearch={this.handleSearch} />\r\n        </section>\r\n        <section className=\"contact-table\">\r\n          <ContactsViewTable data={filteredContacts} onDelete={onDelete} />\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsView;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CustomLink = ({ to, children }) => {\r\n  return (\r\n    <Link to={to} className=\"btn btn-primary\" style={{ marginBottom: 20 }}>\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CustomLink;\r\n","import React, { Component } from 'react';\r\nimport './home-page.styles.css';\r\n\r\nimport { getLabelsWithCount, decrementLabelCount } from '../../modal/contact-labels';\r\nimport { getContacts, deleteContact } from '../../modal/contact-data';\r\n\r\nimport TagList from '../../components/tag-list/tag-list.component';\r\nimport ContactsView from '../../components/contacts-view/contacts-view.components';\r\nimport CustomLink from '../../components/common-components/custom-link/custom-link.compoent';\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    contacts: null,\r\n    tagList: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ contacts: getContacts(), tagList: getLabelsWithCount() });\r\n  }\r\n\r\n  handleDelete = contact => {\r\n    let contacts = [...this.state.contacts];\r\n    contacts = contacts.filter(c => c._id !== contact._id);\r\n    deleteContact(contact);\r\n    decrementLabelCount(contact.label);\r\n    this.setState({ contacts, tagList: getLabelsWithCount() });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, tagList } = this.state;\r\n\r\n    if (!contacts) return <h1>Loading...</h1>;\r\n    else\r\n      return (\r\n        <div className=\"contacts-page\">\r\n          <div className=\"labels-section\">\r\n            <div className=\"create-contact\">\r\n              <CustomLink to=\"/create\">Create Contact</CustomLink>\r\n            </div>\r\n            <div className=\"tag-list\">\r\n              <TagList data={tagList} />\r\n            </div>\r\n          </div>\r\n          <div className=\"contacts-section\">\r\n            <ContactsView data={contacts} onDelete={this.handleDelete} />\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport AppHeader from './components/app-header/app-header.component';\nimport ContactPage from './pages/contact-page/contact-page.component';\nimport HomePage from './pages/home-page/home-page.component';\n\nclass App extends Component {\n  state = {\n    currentUser: null\n  };\n\n  render() {\n    return (\n      <main className=\"App\">\n        <header className=\"\">\n          <AppHeader />\n        </header>\n        <Switch>\n          <Route path=\"/create\" component={ContactPage} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}